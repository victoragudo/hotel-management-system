// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/admin/sync": {
            "post": {
                "description": "Manually trigger synchronization of hotel data from external sources",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Trigger manual sync",
                "parameters": [
                    {
                        "description": "Synchronization options",
                        "name": "options",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/github_com_victoragudo_hotel-management-system_search-service_internal_application_usecase.SyncOptions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Synchronization result with statistics",
                        "schema": {
                            "$ref": "#/definitions/internal_infrastructure_handler.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_infrastructure_handler.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/admin/sync/stats": {
            "get": {
                "description": "Get current statistics about hotel data synchronization including index size, document count, and last update time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get sync statistics",
                "responses": {
                    "200": {
                        "description": "Synchronization statistics",
                        "schema": {
                            "$ref": "#/definitions/internal_infrastructure_handler.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_infrastructure_handler.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/hotels/{id}": {
            "get": {
                "description": "Get detailed information about a specific hotel by its ID with optional reviews limit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hotels"
                ],
                "summary": "Get hotel by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Hotel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Limit the number of reviews to return",
                        "name": "reviewsLimit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hotel details",
                        "schema": {
                            "$ref": "#/definitions/internal_infrastructure_handler.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/internal_infrastructure_handler.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Hotel not found",
                        "schema": {
                            "$ref": "#/definitions/internal_infrastructure_handler.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_infrastructure_handler.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/search/facets": {
            "get": {
                "description": "Get available facets for filtering hotel search results (cities, countries, star ratings, amenities, etc.)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Get search facets",
                "responses": {
                    "200": {
                        "description": "Available search facets with counts",
                        "schema": {
                            "$ref": "#/definitions/internal_infrastructure_handler.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_infrastructure_handler.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/search/hotels": {
            "get": {
                "description": "Search for hotels using various filters like query, location, rating, price range, amenities, etc.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search hotels",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query (hotel name, description, etc.)",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "City filter",
                        "name": "city",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Country filter",
                        "name": "country",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Minimum rating (0-5)",
                        "name": "rating_min",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Maximum rating (0-5)",
                        "name": "rating_max",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Star rating filter (1-5)",
                        "name": "star_rating",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Amenities filter (comma-separated)",
                        "name": "amenities",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Tags filter (comma-separated)",
                        "name": "tags",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Minimum price",
                        "name": "price_min",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Maximum price",
                        "name": "price_max",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Currency code (e.g., USD, EUR)",
                        "name": "currency",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "rating",
                            "price",
                            "distance",
                            "relevance",
                            "name",
                            "created_at"
                        ],
                        "type": "string",
                        "description": "Sort field: rating, price, distance, relevance, name, created_at",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort order: asc, desc",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page (default: 20, max: 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Latitude for location-based search",
                        "name": "latitude",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Longitude for location-based search",
                        "name": "longitude",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Search radius in kilometers",
                        "name": "radius",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results with pagination metadata",
                        "schema": {
                            "$ref": "#/definitions/internal_infrastructure_handler.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/internal_infrastructure_handler.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_infrastructure_handler.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/search/suggestions": {
            "get": {
                "description": "Get autocomplete suggestions for hotel search based on partial query input",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Get hotel search suggestions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query for suggestions",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Maximum number of suggestions to return (default: 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of search suggestions",
                        "schema": {
                            "$ref": "#/definitions/internal_infrastructure_handler.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Query parameter is required",
                        "schema": {
                            "$ref": "#/definitions/internal_infrastructure_handler.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_infrastructure_handler.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/search/trending": {
            "get": {
                "description": "Get currently trending hotel search suggestions based on popular searches",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Get trending search suggestions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Maximum number of trending suggestions to return (default: 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of trending search suggestions",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_infrastructure_handler.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_victoragudo_hotel-management-system_search-service_internal_domain_search.Suggestion"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_infrastructure_handler.APIResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Get the current health status of the search service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "Service health status with timestamp and version",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_infrastructure_handler.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_victoragudo_hotel-management-system_search-service_internal_application_usecase.SyncOptions": {
            "type": "object",
            "properties": {
                "batchSize": {
                    "type": "integer"
                },
                "clearIndexFirst": {
                    "type": "boolean"
                },
                "fullSync": {
                    "type": "boolean"
                },
                "sinceTimestamp": {
                    "type": "string"
                },
                "updateCacheAfter": {
                    "type": "boolean"
                }
            }
        },
        "github_com_victoragudo_hotel-management-system_search-service_internal_domain_search.Suggestion": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "integer"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "score": {
                    "type": "number"
                },
                "text": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "internal_infrastructure_handler.APIResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "string"
                },
                "meta": {},
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "Hotel Management & Search Service API",
	Description:      "API for hotel search and management services",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
